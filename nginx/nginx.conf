upstream reactsneacker {
    server backend:8000;
}

upstream web {
    server frontend:3000;
}
server {
    listen 80;
    server_name sneackers.site;
    server_tokens off;
    

    location /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
    }

    location / {
        return 301 https://$host$request_uri;
    }
    
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name sneackers.site;
    server_tokens off;

    rewrite ^/static/$ /static permanent;
    client_max_body_size 50M;

    ssl_certificate /etc/letsencrypt/live/sneackers.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sneackers.site/privkey.pem;

    include /etc/letsencrypt/options-ssl-nginx.conf;
    
    add_header X_Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Contrnt-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always; 


    location /api {
        proxy_pass http://reactsneacker;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location / {
        proxy_pass http://web;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    location /static/js {
        proxy_pass http://web;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /static/css {
        proxy_pass http://web;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /static/admin {
        alias /usr/src/app/backend/static/admin;
    }

    location /static/rest_framework {
        alias /usr/src/app/backend/static/rest_framework;
    }


    location /media {
        alias /usr/src/app/backend/media;
    }

    
}